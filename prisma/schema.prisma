// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
  id      Int     @id @default(autoincrement())
  pin     String  @unique
  name    String?
  entries Entry[]
}

model AccountCategory {
  id       Int       @id @default(autoincrement())
  name     String
  accounts Account[]
}

model Account {
  id         Int             @id @default(autoincrement())
  name       String
  categoryId Int
  category   AccountCategory @relation(fields: [categoryId], references: [id])
  entries    Entry[]
}

model Entry {
  id        Int       @id @default(autoincrement())
  accountId Int
  account   Account   @relation(fields: [accountId], references: [id])
  amount    Float
  userId    Int
  user      User      @relation(fields: [userId], references: [id])
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}
